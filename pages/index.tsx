import Head from "next/head";
import Image from "next/image";
import { GetStaticProps, NextPage } from "next";
import { Form, Input, Button, Checkbox, Card } from "antd";
import { useTranslation } from "next-i18next";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import styled from "styled-components";
import { userLogin } from "@/redux/userSlice";
import { UserLogin } from "@/models/user";
import { useAppDispatch, useAppSelector } from "@/redux/hooks";

const Home: NextPage = () => {
  const dispatch = useAppDispatch();
  const { t } = useTranslation();
  const user = useAppSelector(({ user }) => user);

  const onFinish = (values: UserLogin) => {
    dispatch(userLogin(values));
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <Header>
        <Image width={187} height={40} src={"/logofull.svg"} alt="recruitery" />
      </Header>
      <WrapLogin>
        <Card>
          <Form
            layout="vertical"
            name="basic"
            initialValues={{
              email: "test99@gmail.com",
              password: "123456",
              remember: true,
            }}
            onFinish={onFinish}
          >
            <Form.Item
              label="Email"
              name="email"
              rules={[{ required: true, message: t("this field is required") }]}
            >
              <Input />
            </Form.Item>
            <Form.Item
              label={t("password")}
              name="password"
              rules={[{ required: true, message: t("this field is required") }]}
            >
              <Input.Password />
            </Form.Item>

            <Form.Item name="remember" valuePropName="checked">
              <Checkbox>{t("remember me")}</Checkbox>
            </Form.Item>

            <Form.Item>
              <Button loading={user.loading} type="primary" htmlType="submit">
                {t("sign in")}
              </Button>
            </Form.Item>
          </Form>
        </Card>
      </WrapLogin>
    </>
  );
};

export const getStaticProps: GetStaticProps = async ({ locale }) => ({
  props: {
    ...(await serverSideTranslations(locale || "vi", ["common"])),
  },
});

export default Home;

const WrapLogin = styled.div`
  max-width: 400px;
  width: 100%;
  margin: auto;
  padding: 0 16px;
`;

const Header = styled.header`
  text-align: center;
  background-color: #fff;
  box-shadow: 0 0 transparent, 0 0 transparent, 0 1px 3px 0 rgba(0, 0, 0, 0.1),
    0 1px 2px 0 rgba(0, 0, 0, 0.06);
  margin-bottom: 96px;
  padding: 8px 0;
`;
